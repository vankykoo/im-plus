syntax = "proto3";

package com.vanky.im.common.protocol;

// 定义Java代码生成相关的选项
option java_package = "com.vanky.im.common.protocol";
option java_multiple_files = true;

message ChatMessage {
  int32 type = 1;           // 协议类型
  string content = 2;       // 消息内容
  string fromId = 3;        // 发送方id
  string toId = 4;          // 接收方id
  string uid = 5;           // 全局唯一ID
  string seq = 6;           // 客户端生成的消息ID
  int64 timestamp = 7;      // 时间戳
  int32 retry = 8;          // 重试次数
  string token = 9;         // 身份验证token，用于连接验证
  string conversationId = 10; // 会话ID，用于标识具体的会话
  string clientSeq = 11;      // 客户端生成的临时序列号，用于回执匹配
  // 统一的序列号体系（磐石计划优化）
  int64 userSeq = 14;         // 用户级全局序列号，用于客户端消息同步和去重
  int64 conversationSeq = 15; // 会话级序列号，用于保证单聊、群聊等所有会话内的消息顺序
  int64 expectedSeq = 16;     // 客户端期望的下一个序列号（用于空洞检测）

  // 消息已读功能新增字段
  ReadReceipt readReceipt = 17;         // 已读回执（客户端 -> 服务端）
  ReadNotification readNotification = 18; // 已读通知（服务端 -> 客户端）
}

// 已读回执消息体（客户端上报已读状态）
message ReadReceipt {
  string conversationId = 1;  // 会话ID
  int64 lastReadSeq = 2;      // 已读到的最大连续序列号
}

// 已读通知消息体（服务端通知已读状态变化）
message ReadNotification {
  string conversationId = 1;  // 会话ID
  int64 lastReadSeq = 2;      // 对端已读的最大seq（私聊使用）
  string msgId = 3;           // 哪条消息的已读状态更新了（群聊使用）
  int32 readCount = 4;        // 最新的已读数（群聊使用）
}